{"version":3,"sources":["webpack:///webpack/bootstrap 9f2f27931fff8e48705c","webpack:///./entry.js","webpack:///./game.js","webpack:///./intruder.js","webpack:///./movingObject.js","webpack:///./util.js","webpack:///./eliteIntruder.js","webpack:///./whiteBloodCell.js","webpack:///./bullet.js","webpack:///./gameView.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,IAAG;AACH;AACA;;AAEA,EAAC;;;;;;;ACtCD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA,kBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA,GAAE;AACF;AACA,GAAE;AACF;AACA;AACA;;AAEA;;;;;;;AC1JA;AACA;;AAEA;AACA,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpCA;AACA;;AAEA;AACA,oCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;ACnCA;AACA;AACA;;AAEA;AACA,oCAAmC;AACnC;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;;AAGA;;;;;;;ACrDA;AACA;AACA;;AAEA;AACA,oCAAmC;AACnC;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACnBA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAuB,2EAA2E;AAClG,wBAAuB,2EAA2E;AAClG,wBAAuB,0EAA0E;AACjG,wBAAuB,0EAA0E;;AAEjG,4BAA2B,4BAA4B;AACvD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 9f2f27931fff8e48705c\n **/","var Game = require(\"./game.js\");\r\nvar GameView = require(\"./gameView.js\");\r\nvar MovingObject = require(\"./movingObject.js\");\r\n\r\nvar canvasEl = document.getElementById(\"game-canvas\");\r\ncanvasEl.width = Game.DIM_X;\r\ncanvasEl.height = Game.DIM_Y;\r\n\r\nvar ctx = canvasEl.getContext(\"2d\");\r\nvar game = new Game();\r\nvar gameView = new GameView(game, ctx)\r\n// gameView.start();\r\n\r\nvar el = document.getElementsByTagName('body')[0];\r\n\r\nvar mainMenu = false;\r\nvar instructionPage = false;\r\n\r\nel.addEventListener(\"keydown\", function(event) {\r\n  var menu = document.getElementById('menu')\r\n  var instructions = document.getElementById('instructions');\r\n\r\n  if (!mainMenu) {\r\n    mainMenu = true;\r\n    menu.className = \"opaque-on-full\";\r\n    instructions.className = \"opaque-off\";\r\n\r\n  } else if (!instructionPage) {\r\n    instructionPage = true;\r\n    instructions.className = \"opaque-on-full\";\r\n    var canvasEl = document.getElementById(\"game-canvas\");\r\n    canvasEl.className = \"opaque-off\"\r\n    gameView.start();\r\n\r\n  } else if (event.keyCode === 82) {\r\n    gameView.reset(new Game(), ctx);\r\n  }\r\n\r\n});\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./entry.js\n ** module id = 0\n ** module chunks = 0\n **/","var Intruder = require(\"./intruder.js\");\r\nvar EliteIntruder = require(\"./eliteIntruder.js\");\r\nvar WhiteBloodCell = require(\"./whiteBloodCell\");\r\nvar Bullet = require(\"./bullet\");\r\n\r\nvar Game = function () {\r\n  this.intruders = [];\r\n  this.eliteIntruders = [];\r\n  this.whiteBloodCells = [];\r\n  this.bullets = [];\r\n\r\n  this.addIntruders();\r\n  this.addEliteIntruders();\r\n}\r\n\r\nGame.BG_COLOR=\"black\";\r\nGame.DIM_X = window.innerWidth;\r\nGame.DIM_Y = window.innerHeight;\r\nGame.NUM_INTRUDERS = 100;\r\nGame.NUM_ELITES = 20;\r\n\r\nGame.prototype.addIntruders = function() {\r\n  for (var i = 0; i < Game.NUM_INTRUDERS; i++) {\r\n    this.intruders.push(new Intruder({\r\n      pos: this.randomPosition(),\r\n      game: this,\r\n      color: \"white\"\r\n    }));\r\n  }\r\n};\r\n\r\nGame.prototype.addEliteIntruders = function() {\r\n  for (var i = 0; i < Game.NUM_ELITES; i++) {\r\n    this.eliteIntruders.push(new EliteIntruder({\r\n      pos: this.randomPosition(),\r\n      game: this,\r\n      color: \"red\"\r\n    }));\r\n  }\r\n};\r\n\r\nGame.prototype.addWhiteBloodCell = function() {\r\n  var ship = new WhiteBloodCell({\r\n    pos: [Game.DIM_X/2, Game.DIM_Y/2],\r\n    game: this,\r\n    color: \"orange\"\r\n  });\r\n  this.whiteBloodCells.push(ship);\r\n  return ship;\r\n};\r\n\r\nGame.prototype.addBullet = function (bullet) {\r\n  this.bullets.push(bullet);\r\n}\r\n\r\nGame.prototype.allObjects = function () {\r\n  return this.intruders.concat(this.whiteBloodCells, this.bullets, this.eliteIntruders);\r\n};\r\n\r\nGame.prototype.draw = function (ctx) {\r\n  // Game.DIM_X = window.innerWidth;\r\n  // Game.DIM_Y = window.innerHeight;\r\n  ctx.clearRect(0, 0, Game.DIM_X, Game.DIM_Y);\r\n  ctx.fillStyle = Game.BG_COLOR;\r\n  ctx.fillRect(0,0,Game.DIM_X, Game.DIM_Y);\r\n\r\n  this.allObjects().forEach(function(object) {\r\n\r\n    if(object.pos[0] + object.vel[0] > Game.DIM_X-object.radius || object.pos[0] + object.vel[0] < object.radius) {\r\n        object.vel[0] *= -1;\r\n    }\r\n    if(object.pos[1] + object.vel[1] > Game.DIM_Y-object.radius || object.pos[1] + object.vel[1] < object.radius) {\r\n      object.vel[1] *= -1;\r\n    }\r\n\r\n    object.draw(ctx);\r\n  });\r\n};\r\n\r\nGame.prototype.moveObjects = function () {\r\n  this.allObjects().forEach(function(object) {\r\n    object.move();\r\n  });\r\n\r\n};\r\n\r\nGame.prototype.randomPosition = function() {\r\n  var x = Game.DIM_X * Math.random();\r\n  var y = Game.DIM_Y * Math.random();\r\n  return [x, y];\r\n};\r\n\r\n\r\n// no longer used, but allows you to wrap the objects in the canvas\r\nGame.prototype.wrap = function (pos) {\r\n  pos[0] = pos[0] > 0 ? pos[0] % Game.DIM_X : Game.DIM_X\r\n  pos[1] = pos[1] > 0 ? pos[1] % Game.DIM_Y : Game.DIM_Y\r\n\r\n  return [pos[0], pos[1]];\r\n};\r\n\r\nGame.prototype.checkCollosions = function () {\r\n  var self = this;\r\n\r\n  this.allObjects().forEach(function(object1) {\r\n    self.allObjects().forEach(function(object2) {\r\n      if (object1 === object2) {\r\n        return;\r\n      }\r\n\r\n      if (object1.isCollidedWith(object2)) {\r\n        object1.collideWith(object2);\r\n        // console.log(\"COLLIDED\");\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nGame.prototype.checkGameState = function () {\r\n  var canvas = document.getElementById(\"game-canvas\");\r\n  var gameOver = document.getElementById('game-over');\r\n  var gameWon = document.getElementById('game-won');\r\n\r\n  if (this.whiteBloodCells.length === 0) {\r\n    gameOver.className=\"opaque-off\";\r\n    canvas.className=\"opaque-on-half\";\r\n  }\r\n\r\n  if (this.allObjects().length === 1 && this.allObjects()[0].type === \"WhiteBloodCell\") {\r\n    gameWon.className=\"opaque-off\";\r\n    canvas.className=\"opaque-on-half\";\r\n  }\r\n\r\n}\r\n\r\nGame.prototype.step = function () {\r\n  this.moveObjects();\r\n  this.checkCollosions();\r\n  this.checkGameState();\r\n};\r\n\r\nGame.prototype.remove = function (object) {\r\n  if (object instanceof Bullet) {\r\n   this.bullets.splice(this.bullets.indexOf(object), 1);\r\n } else if (object instanceof Intruder) {\r\n    var idx = this.intruders.indexOf(object);\r\n    this.intruders.splice(idx,1);\r\n } else if (object instanceof WhiteBloodCell) {\r\n   this.whiteBloodCells.splice(this.whiteBloodCells.indexOf(object), 1);\r\n } else if (object instanceof EliteIntruder) {\r\n   this.eliteIntruders.splice(this.eliteIntruders.indexOf(object), 1);\r\n }\r\n};\r\n\r\nmodule.exports = Game;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./game.js\n ** module id = 1\n ** module chunks = 0\n **/","var MovingObject = require(\"./movingObject\");\r\nvar Util = require(\"./util\");\r\n\r\nvar Intruder = function (hash) {\r\n  hash.color = hash.color || \"black\"; // red , crimson, aqua\r\n  hash.radius = hash.radius || Math.floor(Math.random()*15+2);\r\n  hash.vel = hash.vel || Util.randomVec(0.2);\r\n  MovingObject.call(this, hash);\r\n}\r\nUtil.inherits(Intruder, MovingObject);\r\nIntruder.prototype.type = \"Intruder\";\r\n\r\nmodule.exports = Intruder;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./intruder.js\n ** module id = 2\n ** module chunks = 0\n **/","\r\nvar MovingObject = function (hash) {\r\n  this.pos = hash['pos'];\r\n  this.vel = hash['vel'];\r\n  this.radius = hash['radius'];\r\n  this.color = hash['color'];\r\n  this.game = hash['game'];\r\n}\r\n\r\nMovingObject.prototype.draw = function(ctx) {\r\n  ctx.fillStyle = this.color;\r\n  ctx.beginPath();\r\n\r\n  ctx.arc(this.pos[0], this.pos[1], this.radius, 0, 2 * Math.PI, false);\r\n  ctx.fill();\r\n};\r\n\r\nMovingObject.prototype.move = function() {\r\n  this.pos[0] += this.vel[0];\r\n  this.pos[1] += this.vel[1];\r\n  // this.game.wrap(this.pos);\r\n};\r\n\r\nMovingObject.prototype.isCollidedWith = function (otherObject) {\r\n  var distance = Math.sqrt(\r\n    Math.pow(this.pos[0]-otherObject.pos[0],2) + Math.pow(this.pos[1]-otherObject.pos[1],2)\r\n  );\r\n  return distance <= (this.radius + otherObject.radius);\r\n};\r\n\r\nMovingObject.prototype.collideWith = function (otherObject) {\r\n\r\n  if (otherObject.type === \"EliteIntruder\") return;\r\n\r\n  if (this.radius < otherObject.radius){\r\n    if (this.radius < 2) {\r\n      this.game.remove(this);\r\n    }\r\n    otherObject.radius += this.radius/otherObject.radius;\r\n    this.radius*=0.90;\r\n  }\r\n};\r\n\r\nMovingObject.prototype.remove = function () {\r\n  this.game.remove(this);\r\n};\r\n\r\nmodule.exports = MovingObject;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./movingObject.js\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = {\r\n  inherits: function (ChildClass, ParentClass) {\r\n    function Surrogate() {}\r\n    Surrogate.prototype = ParentClass.prototype;\r\n    ChildClass.prototype = new Surrogate;\r\n    ChildClass.prototype.constructor = ChildClass;\r\n  },\r\n\r\n  // Normalize the length of the vector to 1, maintaining direction.\r\n  dir: function (vec) {\r\n    var norm = this.norm(vec);\r\n    return this.scale(vec, 1 / norm);\r\n  },\r\n  // Find distance between two points.\r\n  dist: function (pos1, pos2) {\r\n    return Math.sqrt(\r\n      Math.pow(pos1[0] - pos2[0], 2) + Math.pow(pos1[1] - pos2[1], 2)\r\n    );\r\n  },\r\n  // Find the length of the vector.\r\n  norm: function (vec) {\r\n    return this.dist([0, 0], vec);\r\n  },\r\n\r\n  scale: function (vec, m) {\r\n    return [vec[0] * m, vec[1] * m];\r\n  },\r\n\r\n  randomVec: function (length) {\r\n    var deg = 2*Math.PI*Math.random();\r\n    var plusOrMinusX = Math.random() < 0.5 ? -1 : 1;\r\n    var plusOrMinusY = Math.random() < 0.5 ? -1 : 1;\r\n    var x = Math.random()*length * plusOrMinusX;\r\n    var y = Math.sqrt(length*length - x*x) * plusOrMinusY;\r\n    return [x,y];\r\n  }\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./util.js\n ** module id = 4\n ** module chunks = 0\n **/","var MovingObject = require(\"./movingObject\");\r\nvar Util = require(\"./util\");\r\n\r\nvar EliteIntruder = function (hash) {\r\n  hash.color = hash.color || \"red\"; // red , crimson, aqua\r\n  hash.radius = hash.radius || Math.floor(Math.random()*10+5);\r\n  hash.vel = hash.vel || Util.randomVec(0.2);\r\n  MovingObject.call(this, hash);\r\n}\r\nUtil.inherits(EliteIntruder, MovingObject);\r\nEliteIntruder.prototype.type = \"EliteIntruder\";\r\n\r\nEliteIntruder.prototype.collideWith = function (otherObject) {\r\n\r\n  if (otherObject.type === \"EliteIntruder\") return;\r\n\r\n  if (otherObject.type === \"WhiteBloodCell\") {\r\n    if (otherObject.radius < 2) {\r\n      otherObject.game.remove(otherObject);\r\n    }\r\n    // this.radius += otherObject.radius/this.radius;\r\n    this.radius += 0.5;\r\n    otherObject.radius*=0.90;\r\n  }\r\n\r\n  if (otherObject.type === \"Bullet\") {\r\n    if (this.radius < 5) {\r\n      this.game.remove(this);\r\n    }\r\n    this.radius -= 0.5;\r\n    otherObject.radius*=0.9;\r\n  }\r\n\r\n};\r\n\r\nmodule.exports = EliteIntruder;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./eliteIntruder.js\n ** module id = 5\n ** module chunks = 0\n **/","var MovingObject = require(\"./movingObject\");\r\nvar Util = require(\"./util\");\r\nvar Bullet = require(\"./bullet.js\");\r\n\r\nvar WhiteBloodCell = function (hash) {\r\n  hash.color = hash.color || \"red\"; // red , crimson, aqua\r\n  hash.radius = hash.radius || 5;\r\n  hash.vel = [0,0];\r\n  MovingObject.call(this, hash);\r\n};\r\n\r\nUtil.inherits(WhiteBloodCell, MovingObject);\r\n\r\nWhiteBloodCell.prototype.type = \"WhiteBloodCell\";\r\n\r\nWhiteBloodCell.prototype.power = function (impulse) {\r\n  this.vel[0] += impulse[0];\r\n  this.vel[1] += impulse[1];\r\n};\r\n\r\nWhiteBloodCell.prototype.move = function() {\r\n  this.vel[0]*=0.99;\r\n  this.vel[1]*=0.99;\r\n  this.pos[0] += this.vel[0];\r\n  this.pos[1] += this.vel[1];\r\n  // this.game.wrap(this.pos);\r\n};\r\n\r\nWhiteBloodCell.prototype.fireBullet = function () {\r\n  // can only shoot if self is large enough\r\n  if (this.radius > 5) {\r\n    var bulletVel = Util.scale(\r\n      Util.dir(this.vel),\r\n      3\r\n    );\r\n\r\n    var offset = Util.scale(\r\n      Util.dir(this.vel),\r\n      this.radius + 2\r\n    );\r\n\r\n    var bullet = new Bullet({\r\n      pos: [this.pos[0] + offset[0] ,this.pos[1] + offset[1]],\r\n      vel: bulletVel,\r\n      game: this.game,\r\n      color: 'white'\r\n    });\r\n    this.game.addBullet(bullet);\r\n    this.radius -= 1;\r\n  }\r\n};\r\n\r\n\r\nmodule.exports = WhiteBloodCell;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./whiteBloodCell.js\n ** module id = 6\n ** module chunks = 0\n **/","var MovingObject = require(\"./movingObject\");\r\nvar Util = require(\"./util\");\r\nvar WhiteBloodCell = require(\"./whiteBloodCell\");\r\n\r\nvar Bullet = function (hash) {\r\n  hash.color = hash.color || \"red\"; // red , crimson, aqua\r\n  hash.radius = 4;\r\n  MovingObject.call(this, hash);\r\n};\r\n\r\n\r\nUtil.inherits(Bullet, MovingObject);\r\nBullet.prototype.type = \"Bullet\";\r\n\r\nBullet.prototype.move = function() {\r\n  this.pos[0] += this.vel[0];\r\n  this.pos[1] += this.vel[1];\r\n};\r\n\r\nmodule.exports = Bullet;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./bullet.js\n ** module id = 7\n ** module chunks = 0\n **/","var Game = require('./game.js');\r\n\r\nvar GameView = function (game, ctx) {\r\n  this.ctx = ctx;\r\n  this.game = game;\r\n  this.whiteBloodCell = this.game.addWhiteBloodCell();\r\n};\r\n\r\nGameView.prototype.start = function (canvasEl) {\r\n    this.bindKeyHandlers();\r\n    // document.addEventListener(\"keydown\", this.handleKeyDown.bind(this), false);\r\n\r\n    var self = this;\r\n    var refresh = function() {\r\n      self.game.step();\r\n      self.game.draw(self.ctx);\r\n    };\r\n\r\n\r\n    this.interval = setInterval(refresh,20)\r\n\r\n    // var interval = interval || setInterval(refresh, 20);\r\n};\r\n\r\n// GameView.prototype.handleKeyDown = function (e) {\r\n//   var whiteBloodCell = this.whiteBloodCell;\r\n//     if (e.keyCode === 87) {\r\n//       Math.abs(whiteBloodCell.vel[1]) < 1 ? whiteBloodCell.power([0,-0.25]) : \"\";\r\n//     }\r\n//     if (e.keyCode === 65) {\r\n//       Math.abs(whiteBloodCell.vel[0]) < 1 ? whiteBloodCell.power([-0.25,0]) : \"\";\r\n//     }\r\n//     if (e.keyCode === 83) {\r\n//       Math.abs(whiteBloodCell.vel[1]) < 1 ? whiteBloodCell.power([0,0.25]) : \"\";\r\n//     }\r\n//     if (e.keyCode === 68) {\r\n//       Math.abs(whiteBloodCell.vel[0]) < 1 ? whiteBloodCell.power([0.25,0]) : \"\";\r\n//     }\r\n//   }\r\n\r\nGameView.prototype.bindKeyHandlers = function () {\r\n  var whiteBloodCell = this.whiteBloodCell;\r\n  key('w', function() {Math.abs(whiteBloodCell.vel[1]) < 1 ? whiteBloodCell.power([0,-0.25]) : \"\"});\r\n  key('a', function() {Math.abs(whiteBloodCell.vel[0]) < 1 ? whiteBloodCell.power([-0.25,0]) : \"\"});\r\n  key('s', function() {Math.abs(whiteBloodCell.vel[1]) < 1 ? whiteBloodCell.power([0,0.25]) : \"\"});\r\n  key('d', function() {Math.abs(whiteBloodCell.vel[0]) < 1 ? whiteBloodCell.power([0.25,0]) : \"\"});\r\n\r\n  key('space', function() {whiteBloodCell.fireBullet()});\r\n};\r\n\r\nGameView.prototype.reset = function (game, ctx) {\r\n  var canvas = document.getElementById(\"game-canvas\");\r\n  var gameOver = document.getElementById('game-over');\r\n  var gameWon = document.getElementById('game-won');\r\n\r\n  gameOver.className=\"opaque-on-full\";\r\n  gameWon.className=\"opaque-on-full\";\r\n  canvas.className=\"opaque-off\";\r\n  this.ctx = ctx;\r\n  this.game = game;\r\n  clearInterval(this.interval);\r\n  this.whiteBloodCell = this.game.addWhiteBloodCell();\r\n  this.start();\r\n};\r\n\r\n\r\nmodule.exports = GameView;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./gameView.js\n ** module id = 8\n ** module chunks = 0\n **/"],"sourceRoot":""}